#!/usr/bin/env php
<?php
// application.php

require __DIR__.'/../../vendor/autoload.php';

use Tardigrades\Command\CreateSectionCommand;
use Tardigrades\Command\InstallFieldTypeCommand;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Symfony\Component\Console\Application;
use Doctrine\ORM\Tools\Setup;
use Doctrine\ORM\EntityManager;

// Container
$container = new ContainerBuilder();

// First add the doctrine entity manager with php
$container
    ->register('doctrine.orm.entity_manager')
    ->setFactory([EntityManager::class, 'create'])
    ->setArguments([
        [
            'dbname' => 'sectionfield',
            'user' => 'root',
            'password' => 'eR83k1n8t0r',
            'host' => '127.0.0.1',
            'port' => '3306',
            'driver' => 'pdo_mysql'
        ],
        Setup::createXMLMetadataConfiguration(
            [
                __DIR__."/../../src/config/xml"
            ],
            true
        )
    ]);

// Now load other services by a service yml
$loader = new YamlFileLoader(
    $container,
    new FileLocator([
        __DIR__.'/../../src/config/service',
        __DIR__.'/../config'
    ])
);
$loader->load('services.yml');
$loader->load('commands.yml');
//$loader->load('config.yml');

$application = new Application();

$application->add($container->get('section_field.create.application.command'));
$application->add($container->get('section_field.update.application.command'));
$application->add($container->get('section_field.delete.application.command'));
$application->add($container->get('section_field.list.application.command'));
$application->add($container->get('section_field.create.language.command'));
$application->add($container->get('section_field.update.language.command'));
$application->add($container->get('section_field.delete.language.command'));
$application->add($container->get('section_field.list.language.command'));
$application->add($container->get('section_field.install.field.type.command'));
$application->add($container->get('section_field.update.field.type.command'));
$application->add($container->get('section_field.delete.field.type.command'));
$application->add($container->get('section_field.list.field.type.command'));
$application->add($container->get('section_field.create.section.command'));
$application->add($container->get('section_field.update.section.command'));
$application->add($container->get('section_field.delete.section.command'));
$application->add($container->get('section_field.list.section.command'));
$application->add($container->get('section_field.generate.section.command'));
$application->add($container->get('section_field.create.field.command'));
$application->add($container->get('section_field.update.field.command'));
$application->add($container->get('section_field.delete.field.command'));
$application->add($container->get('section_field.list.field.command'));

$application->run();
