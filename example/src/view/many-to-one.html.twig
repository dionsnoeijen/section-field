{% extends "master.html.twig" %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <a href="/relationships"><- Relationships</a>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>Many to one</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <h4>Many - Has relationship to one</h4>
            <p>This relationship is defined in the section config with a field. ("manyToOne")</p>
            <hr />
            <ul>
                {% for entry in section('mtoMany').limit(10).fetch() %}
                <li>{{ entry.default }} <a href="/relationships/update-many-record-mto/{{ entry.slug }}" class="btn btn-default pull-right">Edit</a>
                    <ul>
                        <li>{{ entry.mtoOne.default }}</li>
                    </ul>
                    <hr />
                </li>
                {% endfor %}
            </ul>
            <a class="btn btn-default" href="/relationships/create-many-record-mto">Create "Many" entry</a>
        </div>
        <div class="col-md-6">
            <h4>One - Has relationship to many</h4>
            <p>This relationship is automatically added, because the opposing side has the relationship. This is only for reading the data, if you wan't the opposing side represented in the form, you will have to add a field to the "MtoOne" config because SexyField doesn't want to guess your field preferences.</p>
            <hr />
            <ul>
                {% for entry in section('mtoOne').limit(10).fetch() %}
                <li>{{ entry.default }} <a href="/relationships/update-one-record-mto/{{ entry.slug }}" class="btn btn-default pull-right">Edit</a>
                    <ul>
                        {% for many in entry.mtoManies %}
                            <li>{{ many.default }}</li>
                        {% endfor %}
                    </ul>
                    <hr />
                </li>
                {% endfor %}
            </ul>
            <a class="btn btn-default" href="/relationships/create-one-record-mto">Create "One" entry</a>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <p>This is a setup for a basic Many to one field. For the example I have a "Many" side. And a "One" side. Both sides are modeled as a section that contains some basic fields.</p>

            <h4>The fields are configured as follows:</h4>
            <h5>The title field</h5>
            <pre>
field:
  name:
    - nl_NL: Titel
    - en_EN: Title
  label:
    - nl_NL: Titel
    - en_EN: Title
  handle: title
  type: TextInput
  form:
    all:
      trim: true
    update:
      disabled: true
  generator:
    entity:
      validator:
        Length:
          min: 2
          max: 255
    doctrine:
      length: 255
            </pre>
            <h5>The slug field</h5>
            <pre>
field:
  name:
    - nl_NL: Slug
    - en_EN: Slug
  handle: slug
  label:
    - nl_NL: Onderdeel voor url segment
    - en_EN: Composit for url segment
  type: Slug
  generator:
    entity:
      slugFields: [ title, created|DateTime|Y-m-d ]
    doctrine:
      length: 255
      unique: true
  form:
    default:
      available: false
            </pre>
            <h5>The created field</h5>
            <pre>
field:
  name:
    - nl_NL: Aangemaakt
    - en_EN: Created
  handle: created
  label:
    - nl_NL: Bericht aanmaak datum
    - en_EN: Record creation date
  type: DateTimeField
  entityEvents:
    - prePersist
            </pre>
            <h5>The updated field</h5>
            <pre>
field:
  name:
    - nl_NL: Geupdated
    - en_EN: Updated
  handle: updated
  label:
    - nl_NL: Update datum
    - en_EN: Date record is updated
  type: DateTimeField
  entityEvents:
    - prePersist
    - preUpdate
            </pre>
            <h5>The manyToOne field</h5>
            <pre>
field:
  name:
    - nl_NL: Many to One
    - en_EN: Many to One
  handle: manyToOne
  label:
    - nl_NL: Relatie many to one
    - en_EN: Relationship many to one
  type: Relationship
  variant: select
  kind: many-to-one
  to: mtoOne
            </pre>
        </div>
        <div class="col-md-6">
            <p>The many side contains the manyToOne field as configured in the fields above. The section handles are mtoMany and mtoOne, this stands for: Many to One - Many and Many to One - One</p>
            <h4>This is how the sections are configured:</h4>
            <h5>Many side</h5>
            <pre>
section:
  name: Many to One - Many
  handle: mtoMany
  fields:
    - title
    - slug
    - manyToOne
    - updated
    - created
  default: title
  created: created
  updated: updated
  slug: slug
  namespace: Example\Relationships
  generator:
    entity:
      title:
        NotBlank: ~
            </pre>
            <h5>One side</h5>
            <pre>
section:
  name: Many to One - One
  handle: mtoOne
  fields:
    - title
    - slug
    - updated
    - created
  default: title
  created: created
  updated: updated
  slug: slug
  namespace: Example\Relationships
  generator:
    entity:
      title:
        NotBlank: ~
            </pre>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>
{% endblock %}
