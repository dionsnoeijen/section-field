rest.section.all:
  path: /v1/section/{sectionHandle}/{offset}/{limit}/{orderBy}/{sort}
  defaults: { _controller: 'rest.controller:getEntries' }
  methods: [GET]

rest.section.info:
  path: /v1/section/{sectionHandle}
  defaults: { _controller: 'rest.controller:getSectionInfo' }
  methods: [OPTIONS]

rest.section.entry.by.id:
  path: /v1/section/{sectionHandle}/{id}
  defaults: { _controller: 'rest.controller:getEntryById' }
  requirements:
    id: '\d+'
  methods: [GET]

rest.section.entry.by.slug:
  path: /v1/section/{sectionHandle}/{slug}
  defaults: { _controller: 'rest.controller:getEntryBySlug' }
  methods: [GET]

rest.section.create:
  path: /v1/section/{sectionHandle}
  defaults: { _controller: 'rest.controller:createEntry' }
  methods: [POST]

rest.section.update.id:
  path: /v1/section/{sectionHandle}/id/{id}
  defaults: { _controller: 'rest.controller:updateEntryById' }
  methods: [PUT]

rest.section.update.slug:
  path: /v1/section/{sectionHandle}/slug/{slug}
  defaults: { _controller: 'rest.controller:updateEntryBySlug' }
  methods: [PUT]

rest.section.delete.id:
  path: /v1/section/{sectionHandle}/id/{id}
  defaults: { _controller: 'rest.controller:deleteEntryById' }
  methods: [DETELE]

rest.section.delete.slug:
  path: /v1/section/{sectionHandle}/slug/{slug}
  defaults: { _controller: 'rest.controller:deleteEntryById' }
  methods: [DETELE]
